// Mocks generated by Mockito 5.1.0 from annotations
// in mausam/test/get_weather_cubit/get_weather_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mausam/common/exception/app_exception.dart' as _i6;
import 'package:mausam/data/data_source/local_data_source.dart' as _i9;
import 'package:mausam/domain/entities/lat_long_params.dart' as _i8;
import 'package:mausam/domain/entities/location_params.dart' as _i11;
import 'package:mausam/domain/entities/refined_weather.dart' as _i7;
import 'package:mausam/domain/repository/repository.dart' as _i3;
import 'package:mausam/domain/usecase/get_weather_from_location.dart' as _i10;
import 'package:mausam/domain/usecase/get_weather_from_value.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeRepository_1 extends _i1.Fake implements _i3.Repository {}

/// A class which mocks [GetWeatherFromValue].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWeatherFromValue extends _i1.Mock
    implements _i4.GetWeatherFromValue {
  MockGetWeatherFromValue() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.AppError, _i7.RefinedWeatherModel>> call(
          _i8.LatLongParams? p) =>
      (super.noSuchMethod(Invocation.method(#call, [p]),
              returnValue: Future<
                      _i2.Either<_i6.AppError, _i7.RefinedWeatherModel>>.value(
                  _FakeEither_0<_i6.AppError, _i7.RefinedWeatherModel>()))
          as _i5.Future<_i2.Either<_i6.AppError, _i7.RefinedWeatherModel>>);
}

/// A class which mocks [LocationStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationStorage extends _i1.Mock implements _i9.LocationStorage {
  MockLocationStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String getLocation() =>
      (super.noSuchMethod(Invocation.method(#getLocation, []), returnValue: '')
          as String);
  @override
  _i5.Future<bool> setLocation(String? location) =>
      (super.noSuchMethod(Invocation.method(#setLocation, [location]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<bool> removeLocation() =>
      (super.noSuchMethod(Invocation.method(#removeLocation, []),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [GetWeatherFromLocation].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWeatherFromLocation extends _i1.Mock
    implements _i10.GetWeatherFromLocation {
  @override
  _i3.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_1()) as _i3.Repository);
  @override
  _i5.Future<_i2.Either<_i6.AppError, _i7.RefinedWeatherModel>> call(
          _i11.LocationParams? p) =>
      (super.noSuchMethod(Invocation.method(#call, [p]),
              returnValue: Future<
                      _i2.Either<_i6.AppError, _i7.RefinedWeatherModel>>.value(
                  _FakeEither_0<_i6.AppError, _i7.RefinedWeatherModel>()))
          as _i5.Future<_i2.Either<_i6.AppError, _i7.RefinedWeatherModel>>);
}
